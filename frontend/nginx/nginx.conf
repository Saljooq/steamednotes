events {}

http {
    include mime.types;  # Default MIME types
    server {
        listen 80;
        server_name steamednotes.com www.steamednotes.com;

        # Serve ACME challenge for Let’s Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        root /usr/share/nginx/html;

        # Serve static assets directly
        location /assets/ {
         try_files $uri =404;  # No rewrite—direct file access
         add_header Cache-Control "public, max-age=31536000";  # Cache assets for 1 year
            # Explicitly set MIME types for common file extensions
            types {
                text/css                    css;
                application/javascript      js;
                text/html                   html;
            }
        }

        location /api/ {
            proxy_pass http://backend:8080/api/;  # Redirect to Go
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # SPA routing
        location / {
          try_files $uri $uri/ /index.html;  # Fallback to index.html
          add_header Cache-Control "no-store, no-cache, must-revalidate";  # Prevent caching of index.html
        }
        
    }

     server {
        listen 443 ssl;
        server_name steamednotes.com www.steamednotes.com; # Your domain

        ssl_certificate /etc/letsencrypt/live/steamednotes.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/steamednotes.com/privkey.pem;

        root /usr/share/nginx/html;
        index index.html;

         # Serve static assets directly
        location /assets/ {
            try_files $uri =404;  # No rewrite—direct file access
            add_header Cache-Control "public, max-age=31536000";  # Cache assets for 1 year
        }

         location /api/ws/ {
            proxy_pass http://backend:8080/api/ws/;  # or wherever your Go/Node backend is
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 60s;
        }

        location /api/ {
            proxy_pass http://backend:8080/api/;  # Redirect to Go
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # SPA routing
        location / {
          try_files $uri $uri/ /index.html;  # Fallback to index.html
          include /etc/nginx/mime.types;
          add_header Cache-Control "no-store, no-cache, must-revalidate";  # Prevent caching of index.html
        }
    }
}